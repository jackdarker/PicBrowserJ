/*
 * Copyright (C) 2018 jkhome
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package picbrowserj;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import picbrowserj.Cmds.CmdMovePicture;
import picbrowserj.Interface.Callable2;
import picbrowserj.Interface.CmdResultInterface;

/**
 *
 * @author jkhome
 */
public class FrmDialog3Bt extends JDialog {
    private String typedText = null;
    private Callable2<Integer,String> m_PostAction;
/**
     * Returns null if the typed string was invalid;
     * otherwise, returns the string as the user entered it.
     */
    public String getValidatedText() {
        return typedText;
    }
    /** This method clears the dialog and hides it. */
    public void clearAndHide() {
        txtInput.setText(null);
        setVisible(false);
    }

    /** This method handles events for the text field. */
    public void actionPerformed(ActionEvent e) {
    }
    /**
     * Creates new form FrmDialog3Bt
     */
    public FrmDialog3Bt(Frame owner, String title, 
            String Message,
            String[] Buttons, 
            Callable2<Integer,String> PostAction,
            String InputDefault) {
         super(owner, title, Dialog.ModalityType.APPLICATION_MODAL);
        initComponents();

        m_PostAction=PostAction;
        this.txtInput.setText(InputDefault);
        this.txtMessage.setText(Message);
        this.button1.setLabel("OK");
        this.button2.setLabel("");
        this.button3.setLabel("");
        switch (Buttons.length) {
            case 3:
                this.button3.setLabel(Buttons[2]);
            case 2:
                this.button2.setLabel(Buttons[1]);
            case 1:
                this.button2.setLabel(Buttons[0]);
                break;
            default:
                break;
        }
        
        //Handle window closing correctly.
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        /*addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent we) {
                /*
                 * Instead of directly closing the window,
                 * we're going to change the JOptionPane's
                 * value property.
                 */
                 /*   optionPane.setValue(new Integer(
                                        JOptionPane.CLOSED_OPTION));
            }
        });*/
 
        //Ensure the text field always gets the first focus.
        this.addComponentListener(new ComponentAdapter() {
            public void componentShown(ComponentEvent ce) {
                txtInput.requestFocusInWindow();
            }
        });

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        button1 = new java.awt.Button();
        button3 = new java.awt.Button();
        button2 = new java.awt.Button();

        txtMessage.setEditable(false);
        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        txtMessage.setMinimumSize(new java.awt.Dimension(164, 22));
        txtMessage.setName("txtMessage"); // NOI18N
        jScrollPane1.setViewportView(txtMessage);

        txtInput.setColumns(20);
        txtInput.setRows(5);
        txtInput.setName("txtInput"); // NOI18N
        txtInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInputFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtInput);

        button1.setLabel("button1");
        button1.setName("bt1"); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button3.setLabel("button2");
        button3.setName("bt3"); // NOI18N
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button2.setLabel("button2");
        button2.setName("bt2"); // NOI18N
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        validateInput(3);
    }//GEN-LAST:event_button3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        validateInput(2);
    }//GEN-LAST:event_button2ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
       validateInput(1);
        
    }//GEN-LAST:event_button1ActionPerformed
    private void validateInput(int Button) {
        CmdResultInterface _Res=null;
        try {
            _Res= m_PostAction.call(new Integer(Button), txtInput.getText());
            
        } catch(Exception ex) {
            java.util.logging.Logger.getLogger(FrmDialog3Bt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        
        }
        if (_Res!=null && _Res.OK()) this.clearAndHide();
    }
    private void txtInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInputFocusLost
       String s= txtInput.getText();
    }//GEN-LAST:event_txtInputFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextArea txtMessage;
    // End of variables declaration//GEN-END:variables
}
